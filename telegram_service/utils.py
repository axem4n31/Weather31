from typing import List

from pydantic import BaseModel, Field

markup_keyboard = {
    "keyboard": [
        [{"text": "–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ üå°Ô∏è"}],
        [{"text": "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã üå§Ô∏è"}],
        [{"text": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîî"}, {"text": "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω üåç"}, {"text": "–ü–æ–º–æ—â—å üÜò"}]
    ],
    "resize_keyboard": True
}

get_location_keyboard = {
    "keyboard": [
        [{"text": "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π", "request_location": True}]],
    "one_time_keyboard": True,
    "resize_keyboard": True

}


class _UserDataMessage(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram"""
    id: int
    is_bot: bool
    first_name: str
    last_name: str
    username: str
    language_code: str


class _ChatDataMessage(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞ –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram"""
    id: int
    first_name: str
    last_name: str
    username: str
    type: str


class _EntityMessage(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram"""
    offset: int
    length: int
    type: str


class _BaseMessage(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram"""
    message_id: int
    from_: _UserDataMessage = Field(alias='from')
    chat: _ChatDataMessage
    date: int
    text: str
    entities: List[_EntityMessage]


class UpdateMessage(BaseModel):
    update_id: int
    message: _BaseMessage
